{"ast":null,"code":"import _classCallCheck from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bitnami/Viewers/src/components/EditDescriptionDialog/EditDescriptionDialog.js\";\nimport { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\nimport bounding from '../../lib/utils/bounding.js';\nimport { getDialogStyle } from './../Labelling/labellingPositionUtils.js';\nimport './EditDescriptionDialog.css';\n\nvar EditDescriptionDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditDescriptionDialog, _Component);\n\n  function EditDescriptionDialog(props) {\n    var _this;\n\n    _classCallCheck(this, EditDescriptionDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditDescriptionDialog).call(this, props));\n\n    _this.componentDidMount = function () {\n      bounding(_this.mainElement);\n    };\n\n    _this.onClose = function () {\n      _this.props.onCancel();\n    };\n\n    _this.onConfirm = function () {\n      _this.props.onUpdate(_this.state.description);\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        description: event.target.value\n      });\n    };\n\n    _this.state = {\n      description: props.measurementData.description || ''\n    };\n    _this.mainElement = React.createRef();\n    return _this;\n  }\n\n  _createClass(EditDescriptionDialog, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.description !== prevProps.description) {\n        this.setState({\n          description: this.props.description\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = getDialogStyle(this.props.componentStyle);\n      return React.createElement(SimpleDialog, {\n        headerTitle: \"Edit Description\",\n        onClose: this.onClose,\n        onConfirm: this.onConfirm,\n        rootClass: \"editDescriptionDialog\",\n        componentRef: this.mainElement,\n        componentStyle: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.description,\n        className: \"simpleDialogInput\",\n        id: \"description\",\n        autoComplete: \"off\",\n        autoFocus: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditDescriptionDialog;\n}(Component);\n\nEditDescriptionDialog.defaultProps = {\n  componentRef: React.createRef(),\n  componentStyle: {}\n};\nEditDescriptionDialog.propTypes = {\n  measurementData: PropTypes.object.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  componentRef: PropTypes.object,\n  componentStyle: PropTypes.object,\n  onUpdate: PropTypes.func.isRequired\n};\nexport { EditDescriptionDialog as default };","map":{"version":3,"sources":["/home/bitnami/Viewers/src/components/EditDescriptionDialog/EditDescriptionDialog.js"],"names":["Component","React","PropTypes","SimpleDialog","bounding","getDialogStyle","EditDescriptionDialog","props","componentDidMount","mainElement","onClose","onCancel","onConfirm","onUpdate","state","description","handleChange","event","setState","target","value","measurementData","createRef","prevProps","style","componentStyle","defaultProps","componentRef","propTypes","object","isRequired","func"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAEA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,cAAT,QAA+B,0CAA/B;AAEA,OAAO,6BAAP;;IAEqBC,qB;;;;;AAcnB,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+FAAMA,KAAN;;AADiB,UAUnBC,iBAVmB,GAUC,YAAM;AACxBJ,MAAAA,QAAQ,CAAC,MAAKK,WAAN,CAAR;AACD,KAZkB;;AAAA,UA8CnBC,OA9CmB,GA8CT,YAAM;AACd,YAAKH,KAAL,CAAWI,QAAX;AACD,KAhDkB;;AAAA,UAkDnBC,SAlDmB,GAkDP,YAAM;AAChB,YAAKL,KAAL,CAAWM,QAAX,CAAoB,MAAKC,KAAL,CAAWC,WAA/B;AACD,KApDkB;;AAAA,UAsDnBC,YAtDmB,GAsDJ,UAAAC,KAAK,EAAI;AACtB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAA5B,OAAd;AACD,KAxDkB;;AAGjB,UAAKN,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAER,KAAK,CAACc,eAAN,CAAsBN,WAAtB,IAAqC;AADvC,KAAb;AAIA,UAAKN,WAAL,GAAmBR,KAAK,CAACqB,SAAN,EAAnB;AAPiB;AAQlB;;;;uCAMkBC,S,EAAW;AAC5B,UAAI,KAAKhB,KAAL,CAAWQ,WAAX,KAA2BQ,SAAS,CAACR,WAAzC,EAAsD;AACpD,aAAKG,QAAL,CAAc;AACZH,UAAAA,WAAW,EAAE,KAAKR,KAAL,CAAWQ;AADZ,SAAd;AAGD;AACF;;;6BAEQ;AACP,UAAMS,KAAK,GAAGnB,cAAc,CAAC,KAAKE,KAAL,CAAWkB,cAAZ,CAA5B;AAEA,aACE,oBAAC,YAAD;AACE,QAAA,WAAW,EAAC,kBADd;AAEE,QAAA,OAAO,EAAE,KAAKf,OAFhB;AAGE,QAAA,SAAS,EAAE,KAAKE,SAHlB;AAIE,QAAA,SAAS,EAAC,uBAJZ;AAKE,QAAA,YAAY,EAAE,KAAKH,WALrB;AAME,QAAA,cAAc,EAAEe,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AACE,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,WADpB;AAEE,QAAA,SAAS,EAAC,mBAFZ;AAGE,QAAA,EAAE,EAAC,aAHL;AAIE,QAAA,YAAY,EAAC,KAJf;AAKE,QAAA,SAAS,MALX;AAME,QAAA,QAAQ,EAAE,KAAKC,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAmBD;;;;EA1DgDhB,S;;AAA9BM,qB,CACZoB,Y,GAAe;AACpBC,EAAAA,YAAY,EAAE1B,KAAK,CAACqB,SAAN,EADM;AAEpBG,EAAAA,cAAc,EAAE;AAFI,C;AADHnB,qB,CAMZsB,S,GAAY;AACjBP,EAAAA,eAAe,EAAEnB,SAAS,CAAC2B,MAAV,CAAiBC,UADjB;AAEjBnB,EAAAA,QAAQ,EAAET,SAAS,CAAC6B,IAAV,CAAeD,UAFR;AAGjBH,EAAAA,YAAY,EAAEzB,SAAS,CAAC2B,MAHP;AAIjBJ,EAAAA,cAAc,EAAEvB,SAAS,CAAC2B,MAJT;AAKjBhB,EAAAA,QAAQ,EAAEX,SAAS,CAAC6B,IAAV,CAAeD;AALR,C;SANAxB,qB","sourcesContent":["import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\n\nimport bounding from '../../lib/utils/bounding.js';\nimport { getDialogStyle } from './../Labelling/labellingPositionUtils.js';\n\nimport './EditDescriptionDialog.css';\n\nexport default class EditDescriptionDialog extends Component {\n  static defaultProps = {\n    componentRef: React.createRef(),\n    componentStyle: {},\n  };\n\n  static propTypes = {\n    measurementData: PropTypes.object.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    componentRef: PropTypes.object,\n    componentStyle: PropTypes.object,\n    onUpdate: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      description: props.measurementData.description || '',\n    };\n\n    this.mainElement = React.createRef();\n  }\n\n  componentDidMount = () => {\n    bounding(this.mainElement);\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({\n        description: this.props.description,\n      });\n    }\n  }\n\n  render() {\n    const style = getDialogStyle(this.props.componentStyle);\n\n    return (\n      <SimpleDialog\n        headerTitle=\"Edit Description\"\n        onClose={this.onClose}\n        onConfirm={this.onConfirm}\n        rootClass=\"editDescriptionDialog\"\n        componentRef={this.mainElement}\n        componentStyle={style}\n      >\n        <input\n          value={this.state.description}\n          className=\"simpleDialogInput\"\n          id=\"description\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={this.handleChange}\n        />\n      </SimpleDialog>\n    );\n  }\n\n  onClose = () => {\n    this.props.onCancel();\n  };\n\n  onConfirm = () => {\n    this.props.onUpdate(this.state.description);\n  };\n\n  handleChange = event => {\n    this.setState({ description: event.target.value });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}