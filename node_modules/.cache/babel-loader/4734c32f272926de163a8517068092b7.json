{"ast":null,"code":"import OHIF from 'ohif-core';\nimport updateTableWithNewMeasurementData from './lib/updateTableWithNewMeasurementData';\n\nfunction getToolLabellingFlowCallback(store) {\n  var setLabellingFlowDataAction = function setLabellingFlowDataAction(labellingFlowData) {\n    return {\n      type: 'SET_LABELLING_FLOW_DATA',\n      labellingFlowData: labellingFlowData\n    };\n  };\n\n  var setLabellingFlowData = function setLabellingFlowData(labellingFlowData) {\n    store.dispatch(setLabellingFlowDataAction(labellingFlowData));\n  };\n\n  return function toolLabellingFlowCallback(measurementData, eventData, doneCallback) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    var updateLabelling = function updateLabelling(_ref) {\n      var location = _ref.location,\n          response = _ref.response,\n          description = _ref.description;\n\n      // Update the measurement data with the labelling parameters\n      if (location) {\n        measurementData.location = location;\n      }\n\n      if (description) {\n        measurementData.description = description;\n      }\n\n      if (response) {\n        measurementData.response = response;\n      }\n\n      updateTableWithNewMeasurementData(measurementData);\n    };\n\n    var labellingDoneCallback = function labellingDoneCallback() {\n      setLabellingFlowData({\n        visible: false\n      });\n    };\n\n    var labellingFlowData = {\n      visible: true,\n      eventData: eventData,\n      measurementData: measurementData,\n      skipAddLabelButton: options.skipAddLabelButton,\n      editLocation: options.editLocation,\n      editDescription: options.editDescription,\n      editResponse: options.editResponse,\n      editDescriptionOnDialog: options.editDescriptionOnDialog,\n      labellingDoneCallback: labellingDoneCallback,\n      updateLabelling: updateLabelling\n    };\n    setLabellingFlowData(labellingFlowData);\n  };\n}\n\nvar resetLabellingAndContextMenuAction = function resetLabellingAndContextMenuAction(state) {\n  return {\n    type: 'RESET_LABELLING_AND_CONTEXT_MENU',\n    state: state\n  };\n};\n\nvar setToolContextMenuDataAction = function setToolContextMenuDataAction(viewportIndex, toolContextMenuData) {\n  return {\n    type: 'SET_TOOL_CONTEXT_MENU_DATA',\n    viewportIndex: viewportIndex,\n    toolContextMenuData: toolContextMenuData\n  };\n};\n\nfunction getOnRightClickCallback(store) {\n  var setToolContextMenuData = function setToolContextMenuData(viewportIndex, toolContextMenuData) {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(setToolContextMenuDataAction(viewportIndex, toolContextMenuData));\n  };\n\n  var getOnCloseCallback = function getOnCloseCallback(viewportIndex) {\n    return function onClose() {\n      var toolContextMenuData = {\n        visible: false\n      };\n      store.dispatch(setToolContextMenuDataAction(viewportIndex, toolContextMenuData));\n    };\n  };\n\n  return function onRightClick(event) {\n    var eventData = event.detail;\n    var viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n    var toolContextMenuData = {\n      eventData: eventData,\n      isTouchEvent: false,\n      onClose: getOnCloseCallback(viewportIndex)\n    };\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getOnTouchPressCallback(store) {\n  var setToolContextMenuData = function setToolContextMenuData(viewportIndex, toolContextMenuData) {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(setToolContextMenuDataAction(viewportIndex, toolContextMenuData));\n  };\n\n  var getOnCloseCallback = function getOnCloseCallback(viewportIndex) {\n    return function onClose() {\n      var toolContextMenuData = {\n        visible: false\n      };\n      store.dispatch(setToolContextMenuDataAction(viewportIndex, toolContextMenuData));\n    };\n  };\n\n  return function onTouchPress(event) {\n    var eventData = event.detail;\n    var viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n    var toolContextMenuData = {\n      eventData: eventData,\n      isTouchEvent: true,\n      onClose: getOnCloseCallback(viewportIndex)\n    };\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getResetLabellingAndContextMenu(store) {\n  return function resetLabellingAndContextMenu() {\n    store.dispatch(resetLabellingAndContextMenuAction());\n  };\n}\n\nexport default function setupTools(store) {\n  var toolLabellingFlowCallback = getToolLabellingFlowCallback(store);\n  var availableTools = [{\n    name: 'Pan',\n    mouseButtonMasks: [1, 4]\n  }, {\n    name: 'Zoom',\n    mouseButtonMasks: [1, 2]\n  }, {\n    name: 'Wwwc',\n    mouseButtonMasks: [1]\n  }, {\n    name: 'Bidirectional',\n    configuration: {\n      configuration: {\n        getMeasurementLocationCallback: toolLabellingFlowCallback\n      }\n    },\n    mouseButtonMasks: [1]\n  }, {\n    name: 'Length',\n    configuration: {\n      configuration: {\n        getMeasurementLocationCallback: toolLabellingFlowCallback\n      }\n    },\n    mouseButtonMasks: [1]\n  }, {\n    name: 'Angle',\n    configuration: {\n      configuration: {\n        getMeasurementLocationCallback: toolLabellingFlowCallback\n      }\n    },\n    mouseButtonMasks: [1]\n  }, {\n    name: 'StackScroll',\n    mouseButtonMasks: [1]\n  }, {\n    name: 'Brush',\n    mouseButtonMasks: [1]\n  }, {\n    name: 'FreehandMouse',\n    configuration: {\n      configuration: {\n        getMeasurementLocationCallback: toolLabellingFlowCallback\n      }\n    },\n    mouseButtonMasks: [1]\n  }, {\n    name: 'EllipticalRoi',\n    configuration: {\n      configuration: {\n        getMeasurementLocationCallback: toolLabellingFlowCallback\n      }\n    },\n    mouseButtonMasks: [1]\n  }, {\n    name: 'CircleRoi',\n    configuration: {\n      configuration: {\n        getMeasurementLocationCallback: toolLabellingFlowCallback\n      }\n    },\n    mouseButtonMasks: [1]\n  }, {\n    name: 'RectangleRoi',\n    configuration: {\n      configuration: {\n        getMeasurementLocationCallback: toolLabellingFlowCallback\n      }\n    },\n    mouseButtonMasks: [1]\n  }, {\n    name: 'PanMultiTouch'\n  }, {\n    name: 'ZoomTouchPinch'\n  }, {\n    name: 'StackScrollMouseWheel'\n  }, {\n    name: 'StackScrollMultiTouch'\n  }];\n  var onRightClick = getOnRightClickCallback(store);\n  var onTouchPress = getOnTouchPressCallback(store);\n  var onNewImage = getResetLabellingAndContextMenu(store);\n  var onMouseClick = getResetLabellingAndContextMenu(store);\n  var onTouchStart = getResetLabellingAndContextMenu(store);\n  var toolAction = OHIF.redux.actions.setExtensionData('cornerstone', {\n    availableTools: availableTools,\n    onNewImage: onNewImage,\n    onRightClick: onRightClick,\n    onTouchPress: onTouchPress,\n    onTouchStart: onTouchStart,\n    onMouseClick: onMouseClick\n  });\n  store.dispatch(toolAction);\n}","map":{"version":3,"sources":["/home/bitnami/Viewers/src/setupTools.js"],"names":["OHIF","updateTableWithNewMeasurementData","getToolLabellingFlowCallback","store","setLabellingFlowDataAction","labellingFlowData","type","setLabellingFlowData","dispatch","toolLabellingFlowCallback","measurementData","eventData","doneCallback","options","updateLabelling","location","response","description","labellingDoneCallback","visible","skipAddLabelButton","editLocation","editDescription","editResponse","editDescriptionOnDialog","resetLabellingAndContextMenuAction","state","setToolContextMenuDataAction","viewportIndex","toolContextMenuData","getOnRightClickCallback","setToolContextMenuData","getOnCloseCallback","onClose","onRightClick","event","detail","parseInt","element","dataset","isTouchEvent","getOnTouchPressCallback","onTouchPress","getResetLabellingAndContextMenu","resetLabellingAndContextMenu","setupTools","availableTools","name","mouseButtonMasks","configuration","getMeasurementLocationCallback","onNewImage","onMouseClick","onTouchStart","toolAction","redux","actions","setExtensionData"],"mappings":"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","sourcesContent":["import OHIF from 'ohif-core';\nimport updateTableWithNewMeasurementData from './lib/updateTableWithNewMeasurementData';\n\nfunction getToolLabellingFlowCallback(store) {\n  const setLabellingFlowDataAction = labellingFlowData => ({\n    type: 'SET_LABELLING_FLOW_DATA',\n    labellingFlowData,\n  });\n\n  const setLabellingFlowData = labellingFlowData => {\n    store.dispatch(setLabellingFlowDataAction(labellingFlowData));\n  };\n\n  return function toolLabellingFlowCallback(\n    measurementData,\n    eventData,\n    doneCallback,\n    options = {}\n  ) {\n    const updateLabelling = ({ location, response, description }) => {\n      // Update the measurement data with the labelling parameters\n\n      if (location) {\n        measurementData.location = location;\n      }\n      if (description) {\n        measurementData.description = description;\n      }\n      if (response) {\n        measurementData.response = response;\n      }\n\n      updateTableWithNewMeasurementData(measurementData);\n    };\n\n    const labellingDoneCallback = () => {\n      setLabellingFlowData({ visible: false });\n    };\n\n    const labellingFlowData = {\n      visible: true,\n      eventData,\n      measurementData,\n      skipAddLabelButton: options.skipAddLabelButton,\n      editLocation: options.editLocation,\n      editDescription: options.editDescription,\n      editResponse: options.editResponse,\n      editDescriptionOnDialog: options.editDescriptionOnDialog,\n      labellingDoneCallback,\n      updateLabelling,\n    };\n\n    setLabellingFlowData(labellingFlowData);\n  };\n}\n\nconst resetLabellingAndContextMenuAction = state => ({\n  type: 'RESET_LABELLING_AND_CONTEXT_MENU',\n  state,\n});\n\nconst setToolContextMenuDataAction = (viewportIndex, toolContextMenuData) => ({\n  type: 'SET_TOOL_CONTEXT_MENU_DATA',\n  viewportIndex,\n  toolContextMenuData,\n});\n\nfunction getOnRightClickCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onRightClick(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: false,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getOnTouchPressCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onTouchPress(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: true,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getResetLabellingAndContextMenu(store) {\n  return function resetLabellingAndContextMenu() {\n    store.dispatch(resetLabellingAndContextMenuAction());\n  };\n}\n\nexport default function setupTools(store) {\n  const toolLabellingFlowCallback = getToolLabellingFlowCallback(store);\n  const availableTools = [\n    { name: 'Pan', mouseButtonMasks: [1, 4] },\n    { name: 'Zoom', mouseButtonMasks: [1, 2] },\n    { name: 'Wwwc', mouseButtonMasks: [1] },\n    {\n      name: 'Bidirectional',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Length',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Angle',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'StackScroll', mouseButtonMasks: [1] },\n    { name: 'Brush', mouseButtonMasks: [1] },\n    {\n      name: 'FreehandMouse',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'EllipticalRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'CircleRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'RectangleRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'PanMultiTouch' },\n    { name: 'ZoomTouchPinch' },\n    { name: 'StackScrollMouseWheel' },\n    { name: 'StackScrollMultiTouch' },\n  ];\n\n  const onRightClick = getOnRightClickCallback(store);\n  const onTouchPress = getOnTouchPressCallback(store);\n  const onNewImage = getResetLabellingAndContextMenu(store);\n  const onMouseClick = getResetLabellingAndContextMenu(store);\n  const onTouchStart = getResetLabellingAndContextMenu(store);\n  const toolAction = OHIF.redux.actions.setExtensionData('cornerstone', {\n    availableTools,\n    onNewImage,\n    onRightClick,\n    onTouchPress,\n    onTouchStart,\n    onMouseClick,\n  });\n\n  store.dispatch(toolAction);\n}\n"]},"metadata":{},"sourceType":"module"}