{"ast":null,"code":"import _classCallCheck from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bitnami/Viewers/src/components/Labelling/LabellingTransition.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport './LabellingTransition.css'; // If these variables changes, CSS must be updated\n\nvar transitionDuration = 500;\nvar transitionClassName = 'labelling';\nvar transitionOnAppear = true;\n\nvar LabellingTransition =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LabellingTransition, _Component);\n\n  function LabellingTransition() {\n    _classCallCheck(this, LabellingTransition);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LabellingTransition).apply(this, arguments));\n  }\n\n  _createClass(LabellingTransition, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CSSTransition, {\n        in: this.props.displayComponent,\n        appear: transitionOnAppear,\n        timeout: transitionDuration,\n        classNames: transitionClassName,\n        onExited: this.props.onTransitionExit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return LabellingTransition;\n}(Component);\n\nLabellingTransition.propTypes = {\n  children: PropTypes.node.isRequired,\n  displayComponent: PropTypes.bool.isRequired,\n  onTransitionExit: PropTypes.func.isRequired\n};\nexport { LabellingTransition as default };","map":{"version":3,"sources":["/home/bitnami/Viewers/src/components/Labelling/LabellingTransition.js"],"names":["React","Component","PropTypes","CSSTransition","transitionDuration","transitionClassName","transitionOnAppear","LabellingTransition","props","displayComponent","onTransitionExit","children","propTypes","node","isRequired","bool","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,2BAAP,C,CAEA;;AACA,IAAMC,kBAAkB,GAAG,GAA3B;AACA,IAAMC,mBAAmB,GAAG,WAA5B;AACA,IAAMC,kBAAkB,GAAG,IAA3B;;IAEqBC,mB;;;;;;;;;;;;;6BAMV;AACP,aACE,oBAAC,aAAD;AACE,QAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,gBADjB;AAEE,QAAA,MAAM,EAAEH,kBAFV;AAGE,QAAA,OAAO,EAAEF,kBAHX;AAIE,QAAA,UAAU,EAAEC,mBAJd;AAKE,QAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWE,gBALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG,KAAKF,KAAL,CAAWG,QAPd,CADF;AAWD;;;;EAlB8CV,S;;AAA5BM,mB,CACZK,S,GAAY;AACjBD,EAAAA,QAAQ,EAAET,SAAS,CAACW,IAAV,CAAeC,UADR;AAEjBL,EAAAA,gBAAgB,EAAEP,SAAS,CAACa,IAAV,CAAeD,UAFhB;AAGjBJ,EAAAA,gBAAgB,EAAER,SAAS,CAACc,IAAV,CAAeF;AAHhB,C;SADAP,mB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './LabellingTransition.css';\n\n// If these variables changes, CSS must be updated\nconst transitionDuration = 500;\nconst transitionClassName = 'labelling';\nconst transitionOnAppear = true;\n\nexport default class LabellingTransition extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    displayComponent: PropTypes.bool.isRequired,\n    onTransitionExit: PropTypes.func.isRequired,\n  };\n  render() {\n    return (\n      <CSSTransition\n        in={this.props.displayComponent}\n        appear={transitionOnAppear}\n        timeout={transitionDuration}\n        classNames={transitionClassName}\n        onExited={this.props.onTransitionExit}\n      >\n        {this.props.children}\n      </CSSTransition>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}