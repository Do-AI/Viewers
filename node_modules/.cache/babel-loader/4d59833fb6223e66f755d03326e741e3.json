{"ast":null,"code":"import { MODULE_TYPES, utils } from 'ohif-core';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { data } from 'dcmjs';\nvar SOP_CLASS_UIDS = {\n  BASIC_TEXT_SR: '1.2.840.10008.5.1.4.1.1.88.11',\n  ENHANCED_SR: '1.2.840.10008.5.1.4.1.1.88.22',\n  COMPREHENSIVE_SR: '1.2.840.10008.5.1.4.1.1.88.33',\n  PROCEDURE_LOG_STORAGE: '1.2.840.10008.5.1.4.1.1.88.40',\n  MAMMOGRAPHY_CAD_SR: '1.2.840.10008.5.1.4.1.1.88.50',\n  CHEST_CAD_SR: '1.2.840.10008.5.1.4.1.1.88.65',\n  X_RAY_RADIATION_DOSE_SR: '1.2.840.10008.5.1.4.1.1.88.67'\n};\nvar sopClassUids = Object.values(SOP_CLASS_UIDS); // TODO: Handle the case where there is more than one SOP Class Handler for the\n// same SOP Class\n\nvar OHIFDicomHtmlSopClassHandler = {\n  id: 'OHIFDicomHtmlSopClassHandler',\n  type: MODULE_TYPES.SOP_CLASS_HANDLER,\n  sopClassUids: sopClassUids,\n  getDisplaySetFromSeries: function getDisplaySetFromSeries(series, study, dicomWebClient, authorizationHeaders) {\n    var instance = series.getFirstInstance();\n    return {\n      plugin: 'html',\n      displaySetInstanceUid: utils.guid(),\n      wadoRoot: study.getData().wadoRoot,\n      wadoUri: instance.getData().wadouri,\n      sopInstanceUid: instance.getSOPInstanceUID(),\n      seriesInstanceUid: series.getSeriesInstanceUID(),\n      studyInstanceUid: study.getStudyInstanceUID(),\n      authorizationHeaders: authorizationHeaders\n    };\n  }\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n} // https://github.com/facebook/prop-types/issues/69\n\n\nvar TypedArrayProp = {\n  any: function any(props, propName, componentName) {\n    var obj = props[propName];\n\n    if (!(obj instanceof Float64Array || obj instanceof Float32Array || obj instanceof Int32Array || obj instanceof Int16Array || obj instanceof Int8Array || obj instanceof Uint32Array || obj instanceof Uint16Array || obj instanceof Uint8Array || obj instanceof Uint8ClampedArray)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a typed array.');\n    }\n  },\n  float64: function float64(props, propName, componentName) {\n    if (!(props[propName] instanceof Float64Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Float64Array.');\n    }\n  },\n  float32: function float32(props, propName, componentName) {\n    if (!(props[propName] instanceof Float32Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Float32Array.');\n    }\n  },\n  float: function _float(props, propName, componentName) {\n    if (!(props[propName] instanceof Float64Array || props[propName] instanceof Float32Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Float32Array or Float64Array.');\n    }\n  },\n  int32: function int32(props, propName, componentName) {\n    if (!(props[propName] instanceof Int32Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected an Int32Array.');\n    }\n  },\n  int16: function int16(props, propName, componentName) {\n    if (!(props[propName] instanceof Int16Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected an In16Array.');\n    }\n  },\n  int8: function int8(props, propName, componentName) {\n    if (!(props[propName] instanceof Int8Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected an Int8Array.');\n    }\n  },\n  int: function _int(props, propName, componentName) {\n    if (!(props[propName] instanceof Int32Array || props[propName] instanceof Int16Array || props[propName] instanceof Int8Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected an Int32Array, In16Array, or Int8Array.');\n    }\n  },\n  uint32: function uint32(props, propName, componentName) {\n    if (!(props[propName] instanceof Uint32Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Uint32Array.');\n    }\n  },\n  uint16: function uint16(props, propName, componentName) {\n    if (!(props[propName] instanceof Uint16Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Uint16Array.');\n    }\n  },\n  uint8: function uint8(props, propName, componentName) {\n    if (!(props[propName] instanceof Uint8Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Uint8Array.');\n    }\n  },\n  uint8clamped: function uint8clamped(props, propName, componentName) {\n    if (!(props[propName] instanceof Uint8ClampedArray)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Uint8ClampedArray.');\n    }\n  },\n  uint: function uint(props, propName, componentName) {\n    if (!(props[propName] instanceof Uint32Array || props[propName] instanceof Uint16Array || props[propName] instanceof Uint8Array || props[propName] instanceof Uint8ClampedArray)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Uint32Array, Uint16Array, Uint8Array, or Uint8ClampedArray.');\n    }\n  }\n};\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \":root {\\n  --text-color-primary: white;\\n}\\n\\n.DicomHtmlViewport {\\n  padding: 20px;\\n  overflow-y: scroll;\\n  width: 100%;\\n  height: 100%;\\n  color: var(--text-color-primary);\\n}\\n\";\nstyleInject(css);\nvar _dcmjs$data = data,\n    DicomMetaDictionary = _dcmjs$data.DicomMetaDictionary,\n    DicomMessage = _dcmjs$data.DicomMessage;\n\nfunction getMainData(data$$1) {\n  var root = [];\n  var patientValue = \"\".concat(data$$1.PatientName, \" (\").concat(data$$1.PatientSex, \", #\").concat(data$$1.PatientID, \")\");\n  root.push(getMainDataItem('Patient', patientValue));\n  var studyValue = data$$1.StudyDescription;\n  root.push(getMainDataItem('Study', studyValue));\n  var seriesValue = \"\".concat(data$$1.SeriesDescription, \" (#\").concat(data$$1.SeriesNumber, \")\");\n  root.push(getMainDataItem('Series', seriesValue));\n  var manufacturerValue = \"\".concat(data$$1.Manufacturer, \" (\").concat(data$$1.ManufacturerModelName, \", #\").concat(data$$1.DeviceSerialNumber, \")\");\n  root.push(getMainDataItem('Manufacturer', manufacturerValue));\n  var mainDataObjects = {\n    CompletionFlag: 'Completion flag',\n    VerificationFlag: 'Verification flag'\n  };\n  Object.keys(mainDataObjects).forEach(function (key) {\n    if (!data$$1[key]) {\n      return;\n    }\n\n    var item = getMainDataItem(mainDataObjects[key], data$$1[key]);\n    root.push(item);\n  }); // TODO: Format these dates\n\n  var contentDateTimeValue = \"\".concat(data$$1.ContentDate, \" \").concat(data$$1.ContentTime);\n  root.push(getMainDataItem('Content Date/Time', contentDateTimeValue));\n  root.push();\n  return React.createElement(\"div\", null, root);\n}\n\nvar getContentSequence = function getContentSequence(data$$1) {\n  var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var header;\n\n  if (data$$1.ConceptNameCodeSequence) {\n    var _data$ConceptNameCode2 = data$$1.ConceptNameCodeSequence,\n        CodeMeaning = _data$ConceptNameCode2.CodeMeaning,\n        CodeValue = _data$ConceptNameCode2.CodeValue,\n        CodingSchemeDesignator = _data$ConceptNameCode2.CodingSchemeDesignator;\n    header = \"\".concat(CodeMeaning, \" (\").concat(CodeValue, \" - \").concat(CodingSchemeDesignator, \")\");\n  }\n\n  var root = [];\n\n  if (header) {\n    var HeaderDynamicLevel = \"h\".concat(level);\n    root.push(React.createElement(HeaderDynamicLevel, {\n      key: header\n    }, header));\n  }\n\n  Object.keys(data$$1).forEach(function (key) {\n    var value = data$$1[key];\n    var content;\n\n    if (value instanceof Object) {\n      content = getContentSequence(value, level + 1);\n    } else {\n      content = React.createElement(\"div\", {\n        key: key\n      }, key, \" - \", data$$1[key]);\n    }\n\n    root.push(content);\n  });\n  return React.createElement(\"div\", null, root);\n};\n\nfunction getMainDataItem(key, value) {\n  return React.createElement(\"div\", {\n    key: key\n  }, React.createElement(\"b\", null, key), \": \", value);\n}\n\nvar DicomHtmlViewport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DicomHtmlViewport, _Component);\n\n  function DicomHtmlViewport() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DicomHtmlViewport);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DicomHtmlViewport)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      content: null,\n      error: null\n    });\n\n    return _this;\n  }\n\n  _createClass(DicomHtmlViewport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dataSet = this.setContentFromByteArray(this.props.byteArray);\n    }\n  }, {\n    key: \"setContentFromByteArray\",\n    value: function setContentFromByteArray(byteArray) {\n      var arrayBuffer = byteArray.buffer;\n      var dicomData = DicomMessage.readFile(arrayBuffer);\n      var dataset = DicomMetaDictionary.naturalizeDataset(dicomData.dict);\n      dataset._meta = DicomMetaDictionary.namifyDataset(dicomData.meta);\n      var mainData = getMainData(dataset);\n      var contentSequence = getContentSequence(dataset);\n      var content = React.createElement(React.Fragment, null, mainData, contentSequence);\n      this.setState({\n        content: content\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: 'DicomHtmlViewport'\n      }, this.state.content, this.state.error && React.createElement(\"h2\", null, JSON.stringify(this.state.error)));\n    }\n  }]);\n\n  return DicomHtmlViewport;\n}(Component);\n\n_defineProperty(DicomHtmlViewport, \"propTypes\", {\n  byteArray: TypedArrayProp.uint8\n});\n\nvar OHIFDicomHtmlViewport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OHIFDicomHtmlViewport, _Component);\n\n  function OHIFDicomHtmlViewport() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OHIFDicomHtmlViewport);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OHIFDicomHtmlViewport)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      byteArray: null,\n      error: null\n    });\n\n    return _this;\n  }\n\n  _createClass(OHIFDicomHtmlViewport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var displaySet = this.props.viewportData.displaySet;\n      var studyInstanceUid = displaySet.studyInstanceUid,\n          seriesInstanceUid = displaySet.seriesInstanceUid,\n          sopInstanceUid = displaySet.sopInstanceUid,\n          wadoRoot = displaySet.wadoRoot,\n          wadoUri = displaySet.wadoUri,\n          authorizationHeaders = displaySet.authorizationHeaders;\n      this.retrieveDicomData(studyInstanceUid, seriesInstanceUid, sopInstanceUid, wadoRoot, wadoUri, authorizationHeaders).then(function (byteArray) {\n        _this2.setState({\n          byteArray: byteArray\n        });\n      }, function (error) {\n        _this2.setState({\n          error: error\n        });\n\n        throw new Error(error);\n      });\n    }\n  }, {\n    key: \"retrieveDicomData\",\n    value: function retrieveDicomData(studyInstanceUid, seriesInstanceUid, sopInstanceUid, wadoRoot, wadoUri, authorizationHeaders) {\n      // TODO: Passing in a lot of data we aren't using\n      // TODO: Authorization header depends on the server. If we ever have multiple servers\n      // we will need to figure out how / when to pass this information in.\n      return fetch(wadoUri, {\n        headers: authorizationHeaders\n      }).then(function (response) {\n        return response.arrayBuffer();\n      }).then(function (arraybuffer) {\n        return new Uint8Array(arraybuffer);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, this.state.byteArray && React.createElement(DicomHtmlViewport, {\n        byteArray: this.state.byteArray\n      }), this.state.error && React.createElement(\"h2\", null, JSON.stringify(this.state.error)));\n    }\n  }]);\n\n  return OHIFDicomHtmlViewport;\n}(Component);\n\n_defineProperty(OHIFDicomHtmlViewport, \"propTypes\", {\n  studies: PropTypes.object,\n  displaySet: PropTypes.object,\n  viewportIndex: PropTypes.number\n});\n\nvar index = {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'html',\n  getViewportModule: function getViewportModule() {\n    return OHIFDicomHtmlViewport;\n  },\n  getSopClassHandlerModule: function getSopClassHandlerModule() {\n    return OHIFDicomHtmlSopClassHandler;\n  }\n};\nexport default index;","map":null,"metadata":{},"sourceType":"module"}