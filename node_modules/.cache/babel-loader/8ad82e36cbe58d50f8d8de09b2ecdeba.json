{"ast":null,"code":"import _classCallCheck from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bitnami/Viewers/src/components/Labelling/LabellingManager.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash.clonedeep';\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\nimport LabellingFlow from './LabellingFlow.js';\nimport './LabellingManager.css';\n\nvar LabellingManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LabellingManager, _Component);\n\n  function LabellingManager(props) {\n    var _this;\n\n    _classCallCheck(this, LabellingManager);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LabellingManager).call(this, props));\n\n    _this.componentDidMount = function () {\n      document.addEventListener('touchstart', _this.onTouchStart);\n    };\n\n    _this.componentWillUnmount = function () {\n      document.removeEventListener('touchstart', _this.onTouchStart);\n    };\n\n    _this.getRenderComponent = function () {\n      var _this$state = _this.state,\n          editLocation = _this$state.editLocation,\n          editDescription = _this$state.editDescription,\n          editDescriptionOnDialog = _this$state.editDescriptionOnDialog,\n          measurementData = _this$state.measurementData;\n\n      if (editDescriptionOnDialog) {\n        return React.createElement(EditDescriptionDialog, {\n          onCancel: _this.props.labellingDoneCallback,\n          onUpdate: _this.descriptionDialogUpdate,\n          componentRef: _this.editDescriptionDialog,\n          componentStyle: _this.state.componentStyle,\n          measurementData: measurementData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      }\n\n      if (editLocation || editDescription) {\n        return React.createElement(LabellingFlow, Object.assign({}, _this.props, {\n          componentStyle: _this.state.componentStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }));\n      }\n    };\n\n    _this.treatMeasurementData = function (measurementData) {\n      var _this$props = _this.props,\n          editDescription = _this$props.editDescription,\n          editLocation = _this$props.editLocation;\n\n      if (editDescription) {\n        measurementData.description = undefined;\n      }\n\n      if (editLocation) {\n        measurementData.location = undefined;\n      }\n    };\n\n    _this.responseDialogUpdate = function (response) {\n      _this.props.updateLabelling({\n        response: response\n      });\n\n      _this.props.labellingDoneCallback();\n    };\n\n    _this.descriptionDialogUpdate = function (description) {\n      _this.props.updateLabelling({\n        description: description\n      });\n\n      _this.props.labellingDoneCallback();\n    };\n\n    var _measurementData = cloneDeep(props.measurementData);\n\n    _this.treatMeasurementData(_measurementData);\n\n    var _editLocation = props.editLocation;\n\n    if (!props.editDescription && !props.editLocation) {\n      _editLocation = true;\n    }\n\n    _this.state = {\n      componentStyle: getComponentPosition(props.eventData),\n      skipAddLabelButton: props.skipAddLabelButton,\n      editLocation: _editLocation,\n      editDescription: props.editDescription,\n      editDescriptionOnDialog: props.editDescriptionOnDialog,\n      measurementData: _measurementData\n    };\n    return _this;\n  }\n\n  _createClass(LabellingManager, [{\n    key: \"render\",\n    value: function render() {\n      return this.getRenderComponent();\n    }\n  }]);\n\n  return LabellingManager;\n}(Component);\n\nLabellingManager.propTypes = {\n  eventData: PropTypes.object.isRequired,\n  measurementData: PropTypes.object.isRequired,\n  labellingDoneCallback: PropTypes.func.isRequired,\n  updateLabelling: PropTypes.func.isRequired,\n  skipAddLabelButton: PropTypes.bool,\n  editLocation: PropTypes.bool,\n  editDescription: PropTypes.bool,\n  editDescriptionOnDialog: PropTypes.bool\n};\nLabellingManager.defaultProps = {\n  skipAddLabelButton: false,\n  editLocation: false,\n  editDescription: false,\n  editDescriptionOnDialog: false\n};\nexport { LabellingManager as default };\n\nfunction getComponentPosition(eventData) {\n  var _eventData$event = eventData.event,\n      left = _eventData$event.clientX,\n      top = _eventData$event.clientY;\n  return {\n    left: left,\n    top: top\n  };\n}","map":{"version":3,"sources":["/home/bitnami/Viewers/src/components/Labelling/LabellingManager.js"],"names":["React","Component","PropTypes","cloneDeep","EditDescriptionDialog","LabellingFlow","LabellingManager","props","componentDidMount","document","addEventListener","onTouchStart","componentWillUnmount","removeEventListener","getRenderComponent","state","editLocation","editDescription","editDescriptionOnDialog","measurementData","labellingDoneCallback","descriptionDialogUpdate","editDescriptionDialog","componentStyle","treatMeasurementData","description","undefined","location","responseDialogUpdate","response","updateLabelling","getComponentPosition","eventData","skipAddLabelButton","propTypes","object","isRequired","func","bool","defaultProps","event","left","clientX","top","clientY"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport cloneDeep from 'lodash.clonedeep';\n\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\nimport LabellingFlow from './LabellingFlow.js';\n\nimport './LabellingManager.css';\n\nexport default class LabellingManager extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n    editDescriptionOnDialog: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    skipAddLabelButton: false,\n    editLocation: false,\n    editDescription: false,\n    editDescriptionOnDialog: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const measurementData = cloneDeep(props.measurementData);\n    this.treatMeasurementData(measurementData);\n\n    let editLocation = props.editLocation;\n    if (!props.editDescription && !props.editLocation) {\n      editLocation = true;\n    }\n\n    this.state = {\n      componentStyle: getComponentPosition(props.eventData),\n      skipAddLabelButton: props.skipAddLabelButton,\n      editLocation: editLocation,\n      editDescription: props.editDescription,\n      editDescriptionOnDialog: props.editDescriptionOnDialog,\n      measurementData: measurementData,\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('touchstart', this.onTouchStart);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('touchstart', this.onTouchStart);\n  };\n\n  render() {\n    return this.getRenderComponent();\n  }\n\n  getRenderComponent = () => {\n    const {\n      editLocation,\n      editDescription,\n      editDescriptionOnDialog,\n      measurementData,\n    } = this.state;\n\n    if (editDescriptionOnDialog) {\n      return (\n        <EditDescriptionDialog\n          onCancel={this.props.labellingDoneCallback}\n          onUpdate={this.descriptionDialogUpdate}\n          componentRef={this.editDescriptionDialog}\n          componentStyle={this.state.componentStyle}\n          measurementData={measurementData}\n        />\n      );\n    }\n\n    if (editLocation || editDescription) {\n      return (\n        <LabellingFlow\n          {...this.props}\n          componentStyle={this.state.componentStyle}\n        />\n      );\n    }\n  };\n\n  treatMeasurementData = measurementData => {\n    const { editDescription, editLocation } = this.props;\n\n    if (editDescription) {\n      measurementData.description = undefined;\n    }\n    if (editLocation) {\n      measurementData.location = undefined;\n    }\n  };\n\n  responseDialogUpdate = response => {\n    this.props.updateLabelling({\n      response,\n    });\n    this.props.labellingDoneCallback();\n  };\n\n  descriptionDialogUpdate = description => {\n    this.props.updateLabelling({\n      description,\n    });\n    this.props.labellingDoneCallback();\n  };\n}\n\nfunction getComponentPosition(eventData) {\n  const {\n    event: { clientX: left, clientY: top },\n  } = eventData;\n\n  return {\n    left,\n    top,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}