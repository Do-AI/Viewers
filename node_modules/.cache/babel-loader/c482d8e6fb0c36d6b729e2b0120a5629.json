{"ast":null,"code":"import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\n/**\n *\n * @param {String} baseDirectory\n * @param {String} webWorkScriptsPath\n */\n\nexport default function initWebWorkers() {\n  var baseDirectory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '/';\n  var webWorkScriptsPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var scriptsPath = \"\".concat(window.location.protocol, \"//\").concat(window.location.host).concat(baseDirectory).concat(webWorkScriptsPath); // Ensure the last character is a slash\n\n  if (scriptsPath[scriptsPath.length - 1] !== '/') {\n    scriptsPath += '/';\n  }\n\n  var config = {\n    maxWebWorkers: Math.max(navigator.hardwareConcurrency - 1, 1),\n    startWebWorkersOnDemand: true,\n    webWorkerPath: \"\".concat(scriptsPath, \"cornerstoneWADOImageLoaderWebWorker.min.js\"),\n    taskConfiguration: {\n      decodeTask: {\n        loadCodecsOnStartup: true,\n        initializeCodecsOnStartup: false,\n        codecsPath: \"\".concat(scriptsPath, \"cornerstoneWADOImageLoaderCodecs.min.js\"),\n        usePDFJS: false,\n        strict: false\n      }\n    }\n  };\n  cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\n}","map":{"version":3,"sources":["/home/bitnami/Viewers/src/utils/initWebWorkers.js"],"names":["cornerstoneWADOImageLoader","initWebWorkers","baseDirectory","webWorkScriptsPath","scriptsPath","window","location","protocol","host","length","config","maxWebWorkers","Math","max","navigator","hardwareConcurrency","startWebWorkersOnDemand","webWorkerPath","taskConfiguration","decodeTask","loadCodecsOnStartup","initializeCodecsOnStartup","codecsPath","usePDFJS","strict","webWorkerManager","initialize"],"mappings":"AAAA,OAAOA,0BAAP,MAAuC,+BAAvC;AAEA;;;;;;AAKA,eAAe,SAASC,cAAT,GAGb;AAAA,MAFAC,aAEA,uEAFgB,GAEhB;AAAA,MADAC,kBACA,uEADqB,EACrB;AACA,MAAIC,WAAW,aAAMC,MAAM,CAACC,QAAP,CAAgBC,QAAtB,eACbF,MAAM,CAACC,QAAP,CAAgBE,IADH,SAEZN,aAFY,SAEIC,kBAFJ,CAAf,CADA,CAKA;;AACA,MAAIC,WAAW,CAACA,WAAW,CAACK,MAAZ,GAAqB,CAAtB,CAAX,KAAwC,GAA5C,EAAiD;AAC/CL,IAAAA,WAAW,IAAI,GAAf;AACD;;AAED,MAAMM,MAAM,GAAG;AACbC,IAAAA,aAAa,EAAEC,IAAI,CAACC,GAAL,CAASC,SAAS,CAACC,mBAAV,GAAgC,CAAzC,EAA4C,CAA5C,CADF;AAEbC,IAAAA,uBAAuB,EAAE,IAFZ;AAGbC,IAAAA,aAAa,YAAKb,WAAL,+CAHA;AAIbc,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,UAAU,EAAE;AACVC,QAAAA,mBAAmB,EAAE,IADX;AAEVC,QAAAA,yBAAyB,EAAE,KAFjB;AAGVC,QAAAA,UAAU,YAAKlB,WAAL,4CAHA;AAIVmB,QAAAA,QAAQ,EAAE,KAJA;AAKVC,QAAAA,MAAM,EAAE;AALE;AADK;AAJN,GAAf;AAeAxB,EAAAA,0BAA0B,CAACyB,gBAA3B,CAA4CC,UAA5C,CAAuDhB,MAAvD;AACD","sourcesContent":["import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\n\n/**\n *\n * @param {String} baseDirectory\n * @param {String} webWorkScriptsPath\n */\nexport default function initWebWorkers(\n  baseDirectory = '/',\n  webWorkScriptsPath = ''\n) {\n  let scriptsPath = `${window.location.protocol}//${\n    window.location.host\n  }${baseDirectory}${webWorkScriptsPath}`;\n\n  // Ensure the last character is a slash\n  if (scriptsPath[scriptsPath.length - 1] !== '/') {\n    scriptsPath += '/';\n  }\n  \n  const config = {\n    maxWebWorkers: Math.max(navigator.hardwareConcurrency - 1, 1),\n    startWebWorkersOnDemand: true,\n    webWorkerPath: `${scriptsPath}cornerstoneWADOImageLoaderWebWorker.min.js`,\n    taskConfiguration: {\n      decodeTask: {\n        loadCodecsOnStartup: true,\n        initializeCodecsOnStartup: false,\n        codecsPath: `${scriptsPath}cornerstoneWADOImageLoaderCodecs.min.js`,\n        usePDFJS: false,\n        strict: false,\n      },\n    },\n  };\n\n  cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\n}\n"]},"metadata":{},"sourceType":"module"}