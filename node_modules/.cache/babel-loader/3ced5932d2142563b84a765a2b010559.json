{"ast":null,"code":"import OHIF, { MODULE_TYPES, utils } from 'ohif-core';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport dicomParser from 'dicom-parser';\nvar SOP_CLASS_UIDS = {\n  ENCAPSULATED_PDF: '1.2.840.10008.5.1.4.1.1.104.1'\n};\nvar OHIFDicomPDFSopClassHandler = {\n  id: 'OHIFDicomPDFSopClassHandlerPlugin',\n  type: MODULE_TYPES.SOP_CLASS_HANDLER,\n  sopClassUids: [SOP_CLASS_UIDS.ENCAPSULATED_PDF],\n  getDisplaySetFromSeries: function getDisplaySetFromSeries(series, study, dicomWebClient, authorizationHeaders) {\n    var instance = series.getFirstInstance();\n    return {\n      plugin: 'pdf',\n      displaySetInstanceUid: utils.guid(),\n      wadoRoot: study.getData().wadoRoot,\n      wadoUri: instance.getData().wadouri,\n      sopInstanceUid: instance.getSOPInstanceUID(),\n      seriesInstanceUid: series.getSeriesInstanceUID(),\n      studyInstanceUid: study.getStudyInstanceUID(),\n      authorizationHeaders: authorizationHeaders\n    };\n  }\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction OHIFComponentPlugin(props) {\n  return React.createElement(React.Fragment, null, props.children);\n}\n\nOHIFComponentPlugin.propTypes = {\n  id: PropTypes.string.isRequired,\n  init: PropTypes.func.isRequired,\n  destroy: PropTypes.func.isRequired,\n  children: PropTypes.node\n}; // https://github.com/facebook/prop-types/issues/69\n\nvar TypedArrayProp = {\n  any: function any(props, propName, componentName) {\n    var obj = props[propName];\n\n    if (!(obj instanceof Float64Array || obj instanceof Float32Array || obj instanceof Int32Array || obj instanceof Int16Array || obj instanceof Int8Array || obj instanceof Uint32Array || obj instanceof Uint16Array || obj instanceof Uint8Array || obj instanceof Uint8ClampedArray)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a typed array.');\n    }\n  },\n  float64: function float64(props, propName, componentName) {\n    if (!(props[propName] instanceof Float64Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Float64Array.');\n    }\n  },\n  float32: function float32(props, propName, componentName) {\n    if (!(props[propName] instanceof Float32Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Float32Array.');\n    }\n  },\n  float: function _float(props, propName, componentName) {\n    if (!(props[propName] instanceof Float64Array || props[propName] instanceof Float32Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Float32Array or Float64Array.');\n    }\n  },\n  int32: function int32(props, propName, componentName) {\n    if (!(props[propName] instanceof Int32Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected an Int32Array.');\n    }\n  },\n  int16: function int16(props, propName, componentName) {\n    if (!(props[propName] instanceof Int16Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected an In16Array.');\n    }\n  },\n  int8: function int8(props, propName, componentName) {\n    if (!(props[propName] instanceof Int8Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected an Int8Array.');\n    }\n  },\n  int: function _int(props, propName, componentName) {\n    if (!(props[propName] instanceof Int32Array || props[propName] instanceof Int16Array || props[propName] instanceof Int8Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected an Int32Array, In16Array, or Int8Array.');\n    }\n  },\n  uint32: function uint32(props, propName, componentName) {\n    if (!(props[propName] instanceof Uint32Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Uint32Array.');\n    }\n  },\n  uint16: function uint16(props, propName, componentName) {\n    if (!(props[propName] instanceof Uint16Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Uint16Array.');\n    }\n  },\n  uint8: function uint8(props, propName, componentName) {\n    if (!(props[propName] instanceof Uint8Array)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Uint8Array.');\n    }\n  },\n  uint8clamped: function uint8clamped(props, propName, componentName) {\n    if (!(props[propName] instanceof Uint8ClampedArray)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Uint8ClampedArray.');\n    }\n  },\n  uint: function uint(props, propName, componentName) {\n    if (!(props[propName] instanceof Uint32Array || props[propName] instanceof Uint16Array || props[propName] instanceof Uint8Array || props[propName] instanceof Uint8ClampedArray)) {\n      return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Expected a Uint32Array, Uint16Array, Uint8Array, or Uint8ClampedArray.');\n    }\n  }\n};\nvar SOP_CLASS_UIDS$1 = {\n  ENCAPSULATED_PDF: '1.2.840.10008.5.1.4.1.1.104.1'\n};\n\nvar DicomPDFViewport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DicomPDFViewport, _Component);\n\n  function DicomPDFViewport() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DicomPDFViewport);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DicomPDFViewport)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      fileURL: null,\n      error: null\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderPDF\", function (dataSet) {\n      var sopClassUid = dataSet.string('x00080016');\n\n      if (sopClassUid !== SOP_CLASS_UIDS$1.ENCAPSULATED_PDF) {\n        throw new Error('This is not a DICOM-encapsulated PDF');\n      }\n\n      var fileTag = dataSet.elements.x00420011;\n      var offset = fileTag.dataOffset;\n      var remainder = offset + fileTag.length;\n      var pdfByteArray = dataSet.byteArray.slice(offset, remainder);\n      var PDF = new Blob([pdfByteArray], {\n        type: 'application/pdf'\n      });\n      var fileURL = URL.createObjectURL(PDF);\n\n      _this.setState({\n        fileURL: fileURL\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"parseByteArray\", function (byteArray) {\n      var options = {\n        untilTag: ''\n      };\n      var dataSet;\n\n      try {\n        dataSet = dicomParser.parseDicom(byteArray, options);\n      } catch (error) {\n        _this.setState({\n          error: error\n        });\n      }\n\n      return dataSet;\n    });\n\n    return _this;\n  }\n\n  _createClass(DicomPDFViewport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dataSet = this.parseByteArray(this.props.byteArray);\n      this.renderPDF(dataSet);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: 'DicomPDFViewport',\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, this.state.fileURL && React.createElement(\"object\", {\n        data: this.state.fileURL,\n        type: \"application/pdf\",\n        width: \"100%\",\n        height: \"100%\"\n      }), this.state.error && React.createElement(\"h2\", null, JSON.stringify(this.state.error)));\n    }\n  }]);\n\n  return DicomPDFViewport;\n}(Component);\n\n_defineProperty(DicomPDFViewport, \"propTypes\", {\n  byteArray: TypedArrayProp.uint8\n});\n\nvar DICOMWeb = OHIF.DICOMWeb;\n\nvar OHIFDicomPDFViewport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OHIFDicomPDFViewport, _Component);\n\n  function OHIFDicomPDFViewport() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OHIFDicomPDFViewport);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OHIFDicomPDFViewport)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      byteArray: null,\n      error: null\n    });\n\n    return _this;\n  }\n\n  _createClass(OHIFDicomPDFViewport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var displaySet = this.props.viewportData.displaySet;\n      var studyInstanceUid = displaySet.studyInstanceUid,\n          seriesInstanceUid = displaySet.seriesInstanceUid,\n          sopInstanceUid = displaySet.sopInstanceUid,\n          wadoRoot = displaySet.wadoRoot,\n          wadoUri = displaySet.wadoUri,\n          authorizationHeaders = displaySet.authorizationHeaders;\n      this.retrieveDicomData(studyInstanceUid, seriesInstanceUid, sopInstanceUid, wadoRoot, wadoUri, authorizationHeaders).then(function (byteArray) {\n        _this2.setState({\n          byteArray: byteArray\n        });\n      }, function (error) {\n        _this2.setState({\n          error: error\n        });\n\n        throw new Error(error);\n      });\n    }\n  }, {\n    key: \"retrieveDicomData\",\n    value: function retrieveDicomData(studyInstanceUid, seriesInstanceUid, sopInstanceUid, wadoRoot, wadoUri, authorizationHeaders) {\n      // TODO: Passing in a lot of data we aren't using\n      // TODO: Authorization header depends on the server. If we ever have multiple servers\n      // we will need to figure out how / when to pass this information in.\n      return fetch(wadoUri, {\n        headers: authorizationHeaders\n      }).then(function (response) {\n        return response.arrayBuffer();\n      }).then(function (arraybuffer) {\n        return new Uint8Array(arraybuffer);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var id = OHIFDicomPDFViewport.id,\n          init = OHIFDicomPDFViewport.init,\n          destroy = OHIFDicomPDFViewport.destroy;\n      var pluginProps = {\n        id: id,\n        init: init,\n        destroy: destroy\n      };\n      return React.createElement(OHIFComponentPlugin, pluginProps, this.state.byteArray && React.createElement(DicomPDFViewport, {\n        byteArray: this.state.byteArray\n      }), this.state.error && React.createElement(\"h2\", null, JSON.stringify(this.state.error)));\n    }\n  }], [{\n    key: \"init\",\n    value: function init() {\n      console.log('DicomPDFViewport init()');\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      console.log('DicomPDFViewport destroy()');\n    }\n  }]);\n\n  return OHIFDicomPDFViewport;\n}(Component);\n\n_defineProperty(OHIFDicomPDFViewport, \"propTypes\", {\n  studies: PropTypes.object,\n  displaySet: PropTypes.object,\n  viewportIndex: PropTypes.number\n});\n\n_defineProperty(OHIFDicomPDFViewport, \"id\", 'DicomPDFViewportPDF');\n\nvar index = {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id: 'pdf',\n  getViewportModule: function getViewportModule() {\n    return OHIFDicomPDFViewport;\n  },\n  getSopClassHandlerModule: function getSopClassHandlerModule() {\n    return OHIFDicomPDFSopClassHandler;\n  }\n};\nexport default index;","map":null,"metadata":{},"sourceType":"module"}