{"ast":null,"code":"import _classCallCheck from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bitnami/Viewers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bitnami/Viewers/src/components/Labelling/LabellingFlow.js\";\nimport { Icon, SelectTree } from 'react-viewerbase';\nimport React, { Component } from 'react';\nimport LabellingTransition from './LabellingTransition.js';\nimport OHIFLabellingData from './OHIFLabellingData.js';\nimport PropTypes from 'prop-types';\nimport bounding from '../../lib/utils/bounding.js';\nimport cloneDeep from 'lodash.clonedeep';\nimport { getAddLabelButtonStyle } from './labellingPositionUtils.js';\n\nvar LabellingFlow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LabellingFlow, _Component);\n\n  function LabellingFlow(props) {\n    var _this;\n\n    _classCallCheck(this, LabellingFlow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LabellingFlow).call(this, props));\n\n    _this.componentDidUpdate = function () {\n      _this.repositionComponent();\n    };\n\n    _this.labellingStateFragment = function () {\n      var _this$state = _this.state,\n          skipAddLabelButton = _this$state.skipAddLabelButton,\n          editLocation = _this$state.editLocation,\n          description = _this$state.description,\n          locationLabel = _this$state.locationLabel;\n\n      if (!skipAddLabelButton) {\n        return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n          type: \"button\",\n          className: \"addLabelButton\",\n          onClick: _this.showLabelling,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, _this.state.location ? 'Edit' : 'Add', \" Label\"));\n      } else {\n        if (editLocation) {\n          return React.createElement(SelectTree, {\n            items: _this.currentItems,\n            columns: 1,\n            onSelected: _this.selectTreeSelectCalback,\n            selectTreeFirstTitle: \"Assign Label\",\n            onComponentChange: _this.repositionComponent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n            className: \"checkIconWrapper\",\n            onClick: _this.fadeOutAndLeaveFast,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            name: \"check\",\n            className: \"checkIcon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"locationDescriptionWrapper\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"location\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, locationLabel), React.createElement(\"div\", {\n            className: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            id: \"descriptionInput\",\n            ref: _this.descriptionInput,\n            defaultValue: description || '',\n            autoComplete: \"off\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }))), React.createElement(\"div\", {\n            className: \"commonButtons\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            type: \"button\",\n            className: \"commonButton left\",\n            onClick: _this.relabel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, \"Relabel\"), React.createElement(\"button\", {\n            type: \"button\",\n            className: \"commonButton right\",\n            onClick: _this.setDescriptionUpdateMode,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, description ? 'Edit ' : 'Add ', \"Description\")), React.createElement(\"div\", {\n            className: \"editDescriptionButtons\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            type: \"button\",\n            className: \"commonButton left\",\n            onClick: _this.descriptionCancel,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, \"Cancel\"), React.createElement(\"button\", {\n            type: \"button\",\n            className: \"commonButton right\",\n            onClick: _this.descriptionSave,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          }, \"Save\")));\n        }\n      }\n    };\n\n    _this.relabel = function () {\n      _this.setState({\n        editLocation: true\n      });\n    };\n\n    _this.setDescriptionUpdateMode = function () {\n      _this.descriptionInput.current.focus();\n\n      _this.setState({\n        editDescription: true\n      });\n    };\n\n    _this.descriptionCancel = function () {\n      var _cloneDeep = cloneDeep(_this.state),\n          _cloneDeep$descriptio = _cloneDeep.description,\n          description = _cloneDeep$descriptio === void 0 ? '' : _cloneDeep$descriptio;\n\n      _this.descriptionInput.current.value = description;\n\n      _this.setState({\n        editDescription: false\n      });\n    };\n\n    _this.descriptionSave = function () {\n      var description = _this.descriptionInput.current.value;\n\n      _this.props.updateLabelling({\n        description: description\n      });\n\n      _this.setState({\n        description: description,\n        editDescription: false\n      });\n    };\n\n    _this.selectTreeSelectCalback = function (event, itemSelected) {\n      var location = itemSelected.value;\n\n      _this.props.updateLabelling({\n        location: location\n      });\n\n      var viewportTopPosition = _this.mainElement.current.offsetParent.offsetTop;\n      var componentStyle = {\n        top: event.nativeEvent.y - viewportTopPosition - 25,\n        left: _this.state.componentStyle.left\n      };\n\n      _this.setState({\n        editLocation: false,\n        confirmationState: true,\n        location: itemSelected.value,\n        locationLabel: itemSelected.label,\n        componentStyle: componentStyle\n      });\n\n      if (_this.isTouchScreen) {\n        _this.setTimeout = setTimeout(function () {\n          _this.setState({\n            displayComponent: false\n          });\n        }, 2000);\n      }\n    };\n\n    _this.showLabelling = function () {\n      _this.setState({\n        skipAddLabelButton: true,\n        editLocation: false\n      });\n    };\n\n    _this.fadeOutAndLeave = function () {\n      // Wait for 1 sec to dismiss the labelling component\n      _this.fadeOutTimer = setTimeout(function () {\n        _this.setState({\n          displayComponent: false\n        });\n      }, 1000);\n    };\n\n    _this.fadeOutAndLeaveFast = function () {\n      _this.setState({\n        displayComponent: false\n      });\n    };\n\n    _this.clearFadeOutTimer = function () {\n      if (!_this.fadeOutTimer) {\n        return;\n      }\n\n      clearTimeout(_this.fadeOutTimer);\n    };\n\n    _this.repositionComponent = function () {\n      // SetTimeout for the css animation to end.\n      setTimeout(function () {\n        bounding(_this.mainElement);\n      }, 200);\n    };\n\n    var _props$measurementDat = props.measurementData,\n        _location = _props$measurementDat.location,\n        _locationLabel = _props$measurementDat.locationLabel,\n        _description = _props$measurementDat.description;\n    var style = props.componentStyle;\n\n    if (!props.skipAddLabelButton) {\n      style = getAddLabelButtonStyle(props.measurementData, props.eventData);\n    }\n\n    _this.state = {\n      location: _location,\n      locationLabel: _locationLabel,\n      description: _description,\n      skipAddLabelButton: props.skipAddLabelButton,\n      editDescription: props.editDescription,\n      editLocation: props.editLocation,\n      componentStyle: style,\n      confirmationState: false,\n      displayComponent: true\n    };\n    _this.mainElement = React.createRef();\n    _this.descriptionInput = React.createRef();\n    _this.initialItems = OHIFLabellingData;\n    _this.currentItems = cloneDeep(_this.initialItems);\n    return _this;\n  }\n\n  _createClass(LabellingFlow, [{\n    key: \"render\",\n    value: function render() {\n      var mainElementClassName = 'labellingComponent';\n\n      if (this.state.editDescription) {\n        mainElementClassName += ' editDescription';\n      }\n\n      var style = Object.assign({}, this.state.componentStyle);\n\n      if (this.state.skipAddLabelButton) {\n        style.left -= 160;\n      }\n\n      return React.createElement(LabellingTransition, {\n        displayComponent: this.state.displayComponent,\n        onTransitionExit: this.props.labellingDoneCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: mainElementClassName,\n        style: style,\n        ref: this.mainElement,\n        onMouseLeave: this.fadeOutAndLeave,\n        onMouseEnter: this.clearFadeOutTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.labellingStateFragment()));\n    }\n  }]);\n\n  return LabellingFlow;\n}(Component);\n\nLabellingFlow.propTypes = {\n  eventData: PropTypes.object.isRequired,\n  measurementData: PropTypes.object.isRequired,\n  labellingDoneCallback: PropTypes.func.isRequired,\n  updateLabelling: PropTypes.func.isRequired,\n  skipAddLabelButton: PropTypes.bool,\n  editLocation: PropTypes.bool,\n  editDescription: PropTypes.bool\n};\nexport { LabellingFlow as default };","map":{"version":3,"sources":["/home/bitnami/Viewers/src/components/Labelling/LabellingFlow.js"],"names":["Icon","SelectTree","React","Component","LabellingTransition","OHIFLabellingData","PropTypes","bounding","cloneDeep","getAddLabelButtonStyle","LabellingFlow","props","componentDidUpdate","repositionComponent","labellingStateFragment","state","skipAddLabelButton","editLocation","description","locationLabel","showLabelling","location","currentItems","selectTreeSelectCalback","fadeOutAndLeaveFast","descriptionInput","relabel","setDescriptionUpdateMode","descriptionCancel","descriptionSave","setState","current","focus","editDescription","value","updateLabelling","event","itemSelected","viewportTopPosition","mainElement","offsetParent","offsetTop","componentStyle","top","nativeEvent","y","left","confirmationState","label","isTouchScreen","setTimeout","displayComponent","fadeOutAndLeave","fadeOutTimer","clearFadeOutTimer","clearTimeout","measurementData","style","eventData","createRef","initialItems","mainElementClassName","Object","assign","labellingDoneCallback","propTypes","object","isRequired","func","bool"],"mappings":"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","sourcesContent":["import { Icon, SelectTree } from 'react-viewerbase';\nimport React, { Component } from 'react';\n\nimport LabellingTransition from './LabellingTransition.js';\nimport OHIFLabellingData from './OHIFLabellingData.js';\nimport PropTypes from 'prop-types';\nimport bounding from '../../lib/utils/bounding.js';\nimport cloneDeep from 'lodash.clonedeep';\nimport { getAddLabelButtonStyle } from './labellingPositionUtils.js';\n\nexport default class LabellingFlow extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { location, locationLabel, description } = props.measurementData;\n\n    let style = props.componentStyle;\n    if (!props.skipAddLabelButton) {\n      style = getAddLabelButtonStyle(props.measurementData, props.eventData);\n    }\n\n    this.state = {\n      location,\n      locationLabel,\n      description,\n      skipAddLabelButton: props.skipAddLabelButton,\n      editDescription: props.editDescription,\n      editLocation: props.editLocation,\n      componentStyle: style,\n      confirmationState: false,\n      displayComponent: true,\n    };\n\n    this.mainElement = React.createRef();\n    this.descriptionInput = React.createRef();\n\n    this.initialItems = OHIFLabellingData;\n    this.currentItems = cloneDeep(this.initialItems);\n  }\n\n  componentDidUpdate = () => {\n    this.repositionComponent();\n  };\n\n  render() {\n    let mainElementClassName = 'labellingComponent';\n    if (this.state.editDescription) {\n      mainElementClassName += ' editDescription';\n    }\n\n    const style = Object.assign({}, this.state.componentStyle);\n    if (this.state.skipAddLabelButton) {\n      style.left -= 160;\n    }\n\n    return (\n      <LabellingTransition\n        displayComponent={this.state.displayComponent}\n        onTransitionExit={this.props.labellingDoneCallback}\n      >\n        <div\n          className={mainElementClassName}\n          style={style}\n          ref={this.mainElement}\n          onMouseLeave={this.fadeOutAndLeave}\n          onMouseEnter={this.clearFadeOutTimer}\n        >\n          {this.labellingStateFragment()}\n        </div>\n      </LabellingTransition>\n    );\n  }\n\n  labellingStateFragment = () => {\n    const {\n      skipAddLabelButton,\n      editLocation,\n      description,\n      locationLabel,\n    } = this.state;\n\n    if (!skipAddLabelButton) {\n      return (\n        <>\n          <button\n            type=\"button\"\n            className=\"addLabelButton\"\n            onClick={this.showLabelling}\n          >\n            {this.state.location ? 'Edit' : 'Add'} Label\n          </button>\n        </>\n      );\n    } else {\n      if (editLocation) {\n        return (\n          <SelectTree\n            items={this.currentItems}\n            columns={1}\n            onSelected={this.selectTreeSelectCalback}\n            selectTreeFirstTitle=\"Assign Label\"\n            onComponentChange={this.repositionComponent}\n          />\n        );\n      } else {\n        return (\n          <>\n            <div\n              className=\"checkIconWrapper\"\n              onClick={this.fadeOutAndLeaveFast}\n            >\n              <Icon name=\"check\" className=\"checkIcon\" />\n            </div>\n            <div className=\"locationDescriptionWrapper\">\n              <div className=\"location\">{locationLabel}</div>\n              <div className=\"description\">\n                <input\n                  id=\"descriptionInput\"\n                  ref={this.descriptionInput}\n                  defaultValue={description || ''}\n                  autoComplete=\"off\"\n                />\n              </div>\n            </div>\n            <div className=\"commonButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.relabel}\n              >\n                Relabel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.setDescriptionUpdateMode}\n              >\n                {description ? 'Edit ' : 'Add '}\n                Description\n              </button>\n            </div>\n            <div className=\"editDescriptionButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.descriptionCancel}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.descriptionSave}\n              >\n                Save\n              </button>\n            </div>\n          </>\n        );\n      }\n    }\n  };\n\n  relabel = () => {\n    this.setState({\n      editLocation: true,\n    });\n  };\n\n  setDescriptionUpdateMode = () => {\n    this.descriptionInput.current.focus();\n\n    this.setState({\n      editDescription: true,\n    });\n  };\n\n  descriptionCancel = () => {\n    const { description = '' } = cloneDeep(this.state);\n    this.descriptionInput.current.value = description;\n\n    this.setState({\n      editDescription: false,\n    });\n  };\n\n  descriptionSave = () => {\n    const description = this.descriptionInput.current.value;\n    this.props.updateLabelling({ description });\n\n    this.setState({\n      description,\n      editDescription: false,\n    });\n  };\n\n  selectTreeSelectCalback = (event, itemSelected) => {\n    const location = itemSelected.value;\n    this.props.updateLabelling({ location });\n\n    const viewportTopPosition = this.mainElement.current.offsetParent.offsetTop;\n    const componentStyle = {\n      top: event.nativeEvent.y - viewportTopPosition - 25,\n      left: this.state.componentStyle.left,\n    };\n\n    this.setState({\n      editLocation: false,\n      confirmationState: true,\n      location: itemSelected.value,\n      locationLabel: itemSelected.label,\n      componentStyle,\n    });\n\n    if (this.isTouchScreen) {\n      this.setTimeout = setTimeout(() => {\n        this.setState({\n          displayComponent: false,\n        });\n      }, 2000);\n    }\n  };\n\n  showLabelling = () => {\n    this.setState({\n      skipAddLabelButton: true,\n      editLocation: false,\n    });\n  };\n\n  fadeOutAndLeave = () => {\n    // Wait for 1 sec to dismiss the labelling component\n    this.fadeOutTimer = setTimeout(() => {\n      this.setState({\n        displayComponent: false,\n      });\n    }, 1000);\n  };\n\n  fadeOutAndLeaveFast = () => {\n    this.setState({\n      displayComponent: false,\n    });\n  };\n\n  clearFadeOutTimer = () => {\n    if (!this.fadeOutTimer) {\n      return;\n    }\n\n    clearTimeout(this.fadeOutTimer);\n  };\n\n  repositionComponent = () => {\n    // SetTimeout for the css animation to end.\n    setTimeout(() => {\n      bounding(this.mainElement);\n    }, 200);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}