{"ast":null,"code":"import { redux } from 'ohif-core';\nimport store from './../store';\nvar setViewportActive = redux.actions.setViewportActive;\nvar actions = {\n  updateViewportDisplaySet: function updateViewportDisplaySet(_ref) {\n    var direction = _ref.direction;\n    // TODO\n    console.warn('updateDisplaySet: ', direction);\n  },\n  updateActiveViewport: function updateActiveViewport(_ref2) {\n    var viewports = _ref2.viewports,\n        direction = _ref2.direction;\n    var viewportSpecificData = viewports.viewportSpecificData,\n        activeViewportIndex = viewports.activeViewportIndex;\n    var maxIndex = Object.keys(viewportSpecificData).length - 1;\n    var newIndex = activeViewportIndex + direction;\n    newIndex = newIndex > maxIndex ? 0 : newIndex;\n    newIndex = newIndex < 0 ? maxIndex : newIndex;\n    store.dispatch(setViewportActive(newIndex));\n  }\n};\nvar definitions = {\n  // Next/Previous active viewport\n  incrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: {\n      direction: 1\n    }\n  },\n  decrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: {\n      direction: -1\n    }\n  }\n};\nexport default definitions;","map":{"version":3,"sources":["/home/bitnami/Viewers/src/appCommands/viewer.js"],"names":["redux","store","setViewportActive","actions","updateViewportDisplaySet","direction","console","warn","updateActiveViewport","viewports","viewportSpecificData","activeViewportIndex","maxIndex","Object","keys","length","newIndex","dispatch","definitions","incrementActiveViewport","commandFn","storeContexts","options","decrementActiveViewport"],"mappings":"AAAA,SAASA,KAAT,QAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,YAAlB;IACQC,iB,GAAsBF,KAAK,CAACG,O,CAA5BD,iB;AAER,IAAMC,OAAO,GAAG;AACdC,EAAAA,wBAAwB,EAAE,wCAAmB;AAAA,QAAhBC,SAAgB,QAAhBA,SAAgB;AAC3C;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAa,oBAAb,EAAmCF,SAAnC;AACD,GAJa;AAKdG,EAAAA,oBAAoB,EAAE,qCAA8B;AAAA,QAA3BC,SAA2B,SAA3BA,SAA2B;AAAA,QAAhBJ,SAAgB,SAAhBA,SAAgB;AAAA,QAC1CK,oBAD0C,GACID,SADJ,CAC1CC,oBAD0C;AAAA,QACpBC,mBADoB,GACIF,SADJ,CACpBE,mBADoB;AAElD,QAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYJ,oBAAZ,EAAkCK,MAAlC,GAA2C,CAA5D;AAEA,QAAIC,QAAQ,GAAGL,mBAAmB,GAAGN,SAArC;AACAW,IAAAA,QAAQ,GAAGA,QAAQ,GAAGJ,QAAX,GAAsB,CAAtB,GAA0BI,QAArC;AACAA,IAAAA,QAAQ,GAAGA,QAAQ,GAAG,CAAX,GAAeJ,QAAf,GAA0BI,QAArC;AAEAf,IAAAA,KAAK,CAACgB,QAAN,CAAef,iBAAiB,CAACc,QAAD,CAAhC;AACD;AAda,CAAhB;AAiBA,IAAME,WAAW,GAAG;AAClB;AACAC,EAAAA,uBAAuB,EAAE;AACvBC,IAAAA,SAAS,EAAEjB,OAAO,CAACK,oBADI;AAEvBa,IAAAA,aAAa,EAAE,CAAC,WAAD,CAFQ;AAGvBC,IAAAA,OAAO,EAAE;AAAEjB,MAAAA,SAAS,EAAE;AAAb;AAHc,GAFP;AAOlBkB,EAAAA,uBAAuB,EAAE;AACvBH,IAAAA,SAAS,EAAEjB,OAAO,CAACK,oBADI;AAEvBa,IAAAA,aAAa,EAAE,CAAC,WAAD,CAFQ;AAGvBC,IAAAA,OAAO,EAAE;AAAEjB,MAAAA,SAAS,EAAE,CAAC;AAAd;AAHc;AAPP,CAApB;AAcA,eAAea,WAAf","sourcesContent":["import { redux } from 'ohif-core';\nimport store from './../store';\nconst { setViewportActive } = redux.actions;\n\nconst actions = {\n  updateViewportDisplaySet: ({ direction }) => {\n    // TODO\n    console.warn('updateDisplaySet: ', direction);\n  },\n  updateActiveViewport: ({ viewports, direction }) => {\n    const { viewportSpecificData, activeViewportIndex } = viewports;\n    const maxIndex = Object.keys(viewportSpecificData).length - 1;\n\n    let newIndex = activeViewportIndex + direction;\n    newIndex = newIndex > maxIndex ? 0 : newIndex;\n    newIndex = newIndex < 0 ? maxIndex : newIndex;\n\n    store.dispatch(setViewportActive(newIndex));\n  },\n};\n\nconst definitions = {\n  // Next/Previous active viewport\n  incrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: { direction: 1 },\n  },\n  decrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: { direction: -1 },\n  },\n};\n\nexport default definitions;\n"]},"metadata":{},"sourceType":"module"}