{"version":3,"file":"react-nprogress.production.min.js","sources":["../src/timeout.ts","../src/clamp.ts","../src/increment.ts","../src/queue.ts","../src/NProgress.tsx","../src/withNProgress.tsx"],"sourcesContent":["let handle: number | undefined\n\nexport const cancel = () => {\n  if (handle) {\n    window.cancelAnimationFrame(handle)\n  }\n}\n\nexport const timeout = (callback: () => void, delay: number) => {\n  let deltaTime\n  let start: number | undefined\n\n  const frame: FrameRequestCallback = time => {\n    start = start || time\n    deltaTime = time - start\n    if (deltaTime > delay) {\n      callback()\n      return\n    }\n    handle = window.requestAnimationFrame(frame)\n  }\n\n  handle = window.requestAnimationFrame(frame)\n}\n","export const clamp = (num: number, lower: number, upper: number) => {\n  num = num <= upper ? num : upper\n  num = num >= lower ? num : lower\n  return num\n}\n","import { clamp } from './clamp'\n\nexport const increment = (progress: number) => {\n  let amount = 0\n\n  if (progress >= 0 && progress < 0.2) {\n    amount = 0.1\n  } else if (progress >= 0.2 && progress < 0.5) {\n    amount = 0.04\n  } else if (progress >= 0.5 && progress < 0.8) {\n    amount = 0.02\n  } else if (progress >= 0.8 && progress < 0.99) {\n    amount = 0.005\n  }\n\n  return clamp(progress + amount, 0, 0.994)\n}\n","type Next = () => void\ntype Callback = (next: Next) => void\n\nlet isRunning = false\nlet pending: Callback[] = []\n\nconst next: Next = () => {\n  isRunning = true\n  const cb = pending.shift()\n  if (cb) {\n    return cb(next)\n  }\n  isRunning = false\n}\n\nexport const clear = () => {\n  isRunning = false\n  pending = []\n}\n\nexport const queue = (cb: Callback) => {\n  pending.push(cb)\n  if (!isRunning && pending.length === 1) {\n    next()\n  }\n}\n","import * as PropTypes from 'prop-types'\nimport * as React from 'react'\nimport { clamp } from './clamp'\nimport { increment } from './increment'\nimport { clear as clearQueue, queue } from './queue'\nimport { cancel as cancelCurrentTimeout, timeout } from './timeout'\n\nexport interface Props {\n  animationDuration: number\n  children: (renderProps: RenderProps) => React.ReactNode\n  incrementDuration: number\n  isAnimating: boolean\n  minimum: number\n}\n\nexport interface State {\n  isFinished: boolean\n  progress: number\n}\n\nexport type RenderProps = State & Pick<Props, 'animationDuration'>\n\nexport class NProgress extends React.Component<Props, State> {\n  static defaultProps = {\n    animationDuration: 200,\n    incrementDuration: 800,\n    isAnimating: false,\n    minimum: 0.08\n  }\n\n  static propTypes = {\n    animationDuration: PropTypes.number,\n    children: PropTypes.func,\n    incrementDuration: PropTypes.number,\n    isAnimating: PropTypes.bool,\n    minimum: PropTypes.number\n  }\n\n  initialState = {\n    isFinished: false,\n    progress: 0\n  }\n\n  state = this.initialState\n\n  start() {\n    const work = () => {\n      this.trickle()\n      queue(next => {\n        timeout(() => {\n          work()\n          next()\n        }, this.props.incrementDuration)\n      })\n    }\n\n    work()\n  }\n\n  trickle() {\n    this.set(increment(this.state.progress))\n  }\n\n  set(n: number) {\n    n = clamp(n, this.props.minimum, 1)\n\n    if (n === 1) {\n      this.cleanup()\n\n      queue(next => {\n        this.setState(\n          () => ({ progress: n }),\n          () => timeout(next, this.props.animationDuration)\n        )\n      })\n\n      queue(() => {\n        this.setState(() => ({ isFinished: true }), this.cleanup)\n      })\n\n      return\n    }\n\n    queue(next => {\n      this.setState(\n        () => ({ progress: n }),\n        () => timeout(next, this.props.animationDuration)\n      )\n    })\n  }\n\n  cleanup() {\n    cancelCurrentTimeout()\n    clearQueue()\n  }\n\n  done() {\n    this.set(1)\n  }\n\n  componentDidMount() {\n    if (this.props.isAnimating) {\n      this.start()\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.isAnimating && !this.props.isAnimating) {\n      this.done()\n    }\n\n    if (!prevProps.isAnimating && this.props.isAnimating) {\n      this.setState(() => this.initialState, () => this.start())\n    }\n  }\n\n  componentWillUnmount() {\n    this.cleanup()\n  }\n\n  render() {\n    return this.props.children({\n      ...this.state,\n      animationDuration: this.props.animationDuration\n    })\n  }\n}\n","import hoistNonReactStatics from 'hoist-non-react-statics'\nimport * as React from 'react'\nimport { NProgress, Props, RenderProps } from './NProgress'\n\ntype EnhancedProps<P> = P &\n  Partial<Pick<Props, Exclude<keyof Props, 'children'>>>\n\nexport function withNProgress<P>(\n  BaseComponent: React.ComponentType<EnhancedProps<P>>\n) {\n  const WithNProgress: React.FC<EnhancedProps<P>> = props => (\n    <NProgress {...props}>\n      {(p: RenderProps) => <BaseComponent {...props} {...p} />}\n    </NProgress>\n  )\n\n  hoistNonReactStatics(WithNProgress, BaseComponent)\n\n  return WithNProgress\n}\n"],"names":["handle","clamp","num","lower","upper","increment","progress","amount","isRunning","pending","next","cb","shift","clear","queue","push","length","cancel","window","cancelAnimationFrame","timeout","callback","delay","start","requestAnimationFrame","frame","time","NProgress","initialState","isFinished","state","_this","work","_this2","trickle","props","incrementDuration","set","this","n","minimum","cleanup","_this3","setState","animationDuration","cancelCurrentTimeout","clearQueue","done","componentDidMount","isAnimating","componentDidUpdate","prevProps","_this4","componentWillUnmount","render","children","React","withNProgress","BaseComponent","WithNProgress","React.createElement","p","hoistNonReactStatics","defaultProps"],"mappings":"4JAAIA,2PCASC,MAAQ,SAACC,EAAaC,EAAeC,UAEhDF,EAAaC,IADbD,EAAMA,GAAOE,EAAQF,EAAME,GACNF,EAAMC,GCAhBE,UAAY,SAACC,OACpBC,EAAS,SAEG,GAAZD,GAAiBA,EAAW,GAC9BC,EAAS,GACY,IAAZD,GAAmBA,EAAW,GACvCC,EAAS,IACY,IAAZD,GAAmBA,EAAW,GACvCC,EAAS,IACY,IAAZD,GAAmBA,EAAW,MACvCC,EAAS,MAGJN,MAAMK,EAAWC,EAAQ,EAAG,OCZjCC,WAAY,EACZC,QAAsB,GAEpBC,KAAa,SAAbA,IACJF,WAAY,MACNG,EAAKF,QAAQG,WACfD,SACKA,EAAGD,GAEZF,WAAY,GAGDK,MAAQ,WACnBL,WAAY,EACZC,QAAU,IAGCK,MAAQ,SAACH,GACpBF,QAAQM,KAAKJ,GACRH,WAAgC,IAAnBC,QAAQO,QACxBN,QHrBSO,OAAS,WAChBjB,QACFkB,OAAOC,qBAAqBnB,SAInBoB,QAAU,SAACC,EAAsBC,OAExCC,EAYJvB,OAASkB,OAAOM,sBAVoB,SAA9BC,EAA8BC,GAGlBJ,EADJI,GADZH,EAAQA,GAASG,GAGfL,IAGFrB,OAASkB,OAAOM,sBAAsBC,MIG7BE,UAAb,oJAgBEC,aAAe,CACbC,YAAY,EACZvB,SAAU,KAGZwB,MAAQC,EAAKH,8DAEbL,MAAA,uBACe,SAAPS,IACJC,EAAKC,UACLpB,MAAM,SAAAJ,GACJU,QAAQ,WACNY,IACAtB,KACCuB,EAAKE,MAAMC,qBAIlBJ,MAGFE,QAAA,gBACOG,IAAIhC,UAAUiC,KAAKR,MAAMxB,cAGhC+B,IAAA,SAAIE,iBAGQ,KAFVA,EAAItC,MAAMsC,EAAGD,KAAKH,MAAMK,QAAS,gBAG1BC,UAEL3B,MAAM,SAAAJ,GACJgC,EAAKC,SACH,iBAAO,CAAErC,SAAUiC,IACnB,kBAAMnB,QAAQV,EAAMgC,EAAKP,MAAMS,4BAInC9B,MAAM,WACJ4B,EAAKC,SAAS,iBAAO,CAAEd,YAAY,IAASa,EAAKD,WAMrD3B,MAAM,SAAAJ,GACJgC,EAAKC,SACH,iBAAO,CAAErC,SAAUiC,IACnB,kBAAMnB,QAAQV,EAAMgC,EAAKP,MAAMS,0BAKrCH,QAAA,WACEI,SACAC,WAGFC,KAAA,gBACOV,IAAI,MAGXW,kBAAA,WACMV,KAAKH,MAAMc,kBACR1B,WAIT2B,mBAAA,SAAmBC,cACbA,EAAUF,cAAgBX,KAAKH,MAAMc,kBAClCF,QAGFI,EAAUF,aAAeX,KAAKH,MAAMc,kBAClCN,SAAS,kBAAMS,EAAKxB,cAAc,kBAAMwB,EAAK7B,aAItD8B,qBAAA,gBACOZ,aAGPa,OAAA,kBACShB,KAAKH,MAAMoB,qBACbjB,KAAKR,OACRc,kBAAmBN,KAAKH,MAAMS,wBArGpC,CAA+BY,iBCfxB,SAASC,cACdC,OAEMC,EAA4C,SAAAxB,UAChDyB,oBAACjC,UAAcQ,EACZ,SAAC0B,UAAmBD,oBAACF,cAAkBvB,EAAW0B,cAIvDC,qBAAqBH,EAAeD,GAE7BC,EDIIhC,UACJoC,aAAe,CACpBnB,kBAAmB,IACnBR,kBAAmB,IACnBa,aAAa,EACbT,QAAS"}